#!/usr/bin/env bash

checkUnitTestFailure() {
   RET_CODE=$?
   if [ $RET_CODE != 0 ];
   then
      UNIT_TEST_FAILURE=true
   fi
}

TEST_SCOPE=
if [ "$1" == "--scope" ]; then 
   if [ "$#" == 1 ]; then 
      printf "Specify scope (core, session, or r).\n"
      exit 1
   fi

   # Remember test scope
   TEST_SCOPE="$2"

   # Remove the option and argument we just read
   shift 2

elif [ "$1" == "--help" ]; then 
   printf "Runs RStudio unit tests. Available flags: \n\n"
   printf "--help   Show this help\n"
   printf "--scope  Run only tests with the given scope (core, rsession, or r)\n\n"
   printf "Any other options are passed to Valgrind."
   exit 0
fi

## Any remaining arguments passed in are considered arguments to valgrind
if [ "$#" -eq 0 ]; then
	VALGRIND=
else
	VALGRIND="valgrind --dsymutil=yes $@"
fi

## On a Debug Mac IDE build via xcodebuild, the executables 
## will be in a Debug folder
if [ ! -e "${CMAKE_CURRENT_BINARY_DIR}/core/rstudio-core-tests" ]
then
    RSTUDIO_CORETEST_BIN="Debug/rstudio-core-tests"
    RSTUDIO_SESSION_BIN="Debug/rsession"
else
    RSTUDIO_CORETEST_BIN="rstudio-core-tests"
    RSTUDIO_SESSION_BIN="rsession"
fi

# Run core tests
if [ -z "$TEST_SCOPE" ] || [ "$TEST_SCOPE" == "core" ]; then
    echo Running 'core' tests...
    $VALGRIND ${CMAKE_CURRENT_BINARY_DIR}/core/$RSTUDIO_CORETEST_BIN -s
    checkUnitTestFailure
fi

# Setup for rsession tests
if [ -e ${CMAKE_CURRENT_BINARY_DIR}/conf/rdesktop-dev.conf ]; then
   SESSION_CONF_FILE=${CMAKE_CURRENT_BINARY_DIR}/conf/rdesktop-dev.conf
else
   # set R environment variables needed by rsession tests
   export R_HOME=$(R --slave --vanilla -e "cat(paste(R.home('home'),sep=':'))")
   export R_DOC_DIR=$(R --slave --vanilla -e "cat(paste(R.home('doc'),sep=':'))")

   SESSION_CONF_FILE=${CMAKE_CURRENT_BINARY_DIR}/conf/rsession-dev.conf
fi


if [ -z "$TEST_SCOPE" ] || [ "$TEST_SCOPE" == "rsession" ]; then
    echo Running 'rsession' tests...

    $VALGRIND ${CMAKE_CURRENT_BINARY_DIR}/session/$RSTUDIO_SESSION_BIN \
       --run-tests \
       --config-file=$SESSION_CONF_FILE
    checkUnitTestFailure
fi
   
if [ -z "$TEST_SCOPE" ] || [ "$TEST_SCOPE" == "r" ]; then
    echo Running 'r' tests...

    ${CMAKE_CURRENT_BINARY_DIR}/session/$RSTUDIO_SESSION_BIN \
        --run-script "testthat::test_dir('${CMAKE_CURRENT_SOURCE_DIR}/tests/testthat')" \
        --config-file=$SESSION_CONF_FILE
    checkUnitTestFailure
fi

# return an error exit code if any unit tests failed
if [ "$UNIT_TEST_FAILURE" = true ]; then
    exit 1
fi

# otherwise, return success
exit 0
